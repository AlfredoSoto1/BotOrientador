/**
 * 
 */
package assistant.rest.service;

import java.util.List;

import org.springframework.stereotype.Service;

import assistant.discord.object.MemberPosition;
import assistant.discord.object.MemberProgram;
import assistant.rest.dto.MemberDTO;
import assistant.rest.dto.StudentDTO;
import assistant.rest.dto.TeamDTO;

/**
 * @author Alfredo
 */
@Service
public class TeamGroupCreatorService {
	
	private final TeamService teamService;
	private final MemberService memberService;
	
	public TeamGroupCreatorService(MemberService memberService, TeamService teamService) {
		this.teamService = teamService;
		this.memberService = memberService;
	}
	
	public void distributeAndExportStudentsToTeams(MemberProgram program1, MemberProgram program2, long server, String excelFilePath) {
		// Obtain all teams available in a server
		// as of max values that can receive is 20 starting at page 0
		List<TeamDTO> teams = teamService.getAllTeams(0, 20, server);
		
		int groupSize = 30;
		int groupCount = teams.size();
		int groupFemaleCount = 5;
		
		// Load students from excel file to a
		// Student Data transfer object to manipulate the data
		List<StudentDTO> loadedStudents = memberService.loadStudentsFrom(excelFilePath);
		
		// Obtain the Prepa division teams from student list
		var teamsTable = teamService.getPrepaTeamDivisionFrom(
			program1,
			program2,
			loadedStudents,
			groupCount,
			groupSize,
			groupFemaleCount
		);
		
		for (var groupTeam : teamsTable.entrySet()) {
			// Transform the set of students of a team
			// to members, this way the service can handle them as new members
			List<MemberDTO> members = memberService.toMember(groupTeam.getValue());
			
			// Tell the member service to add all the new members from 
			// the selected team according to the id generated by the teams table.
			// This will allocate the new members into the Prepa entity table
			// as part of a team within a server.
			memberService.addMembers(members, MemberPosition.PREPA, server, teams.get(groupTeam.getKey()).getName());
			
			// Obtain a team from the list and export the student
			// group to an excel sheet where it will contain all new student group data
			teamService.exportStudentsTo(groupTeam.getValue(), "assets/attendance/CSE-Equipos/Equipo-" + teams.get(groupTeam.getKey()).getName() + ".xlsx");
		}
	}
}
